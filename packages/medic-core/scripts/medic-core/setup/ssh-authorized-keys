#!/bin/sh

source '/boot/include/hypervisor'

setup()
{
  local self="`realpath "$0"`"
  local base="`dirname "$self"`/.."

  source "$base/env" &&
  merge_environment /srv || return 255

  persist_ssh_user_configuration_files \
    vm "$PACKAGE_SETTINGS" authorized_keys &&
  \
  install_default_ssh_keys vm authorized_keys

  return "$?"
}

persist_ssh_user_configuration_files()
{
  local user="$1"
  local package_settings_dir="$2"
  shift 2
  
  local ssh_dot_dir="/home/$user/.ssh"
  local ssh_settings_dir="$package_settings_dir/openssh/user/$user"

  mkdir -p "$ssh_dot_dir" "$ssh_settings_dir" \
    || return "$?"

  for file in "$@"; do
    local src_path="$ssh_dot_dir/authorized_keys"
    local target_path="$ssh_settings_dir/authorized_keys"
    
    touch "$target_path" || return 1

    if [ -f "$src_path" ]; then
      cat "$src_path" >> "$target_path" || return 2
    fi

    rm -f "$src_path" &&
    ln -sf "$target_path" "$src_path" &&
    chown "$user.staff" "$target_path" || return 3
  done

  return 0
}

install_default_ssh_keys()
{
  local user="$1"
  local authorized_keys="$2"

  if [ "`hypervisor_type`" != 'xen' ]; then
    return 0
  fi

  (exec "$PACKAGE_ROOT/sbin/ec2-metadata" -u \
    | grep '^\(ssh\|ecdsa\)-' >> ~vm/.ssh/"$authorized_keys") &>/dev/null &

  return 0
}

setup "$@"
exit "$?"

